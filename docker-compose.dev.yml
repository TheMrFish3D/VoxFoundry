version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: voxfoundry
      POSTGRES_USER: voxfoundry
      POSTGRES_PASSWORD: development_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voxfoundry -d voxfoundry"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: voxfoundry
      MINIO_ROOT_PASSWORD: development_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Development services (uncomment when ready)
  # api-gateway:
  #   build: ./packages/backend/api-gateway
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     DATABASE_URL: postgres://voxfoundry:development_password@postgres:5432/voxfoundry
  #     REDIS_URL: redis://redis:6379
  #     MINIO_ENDPOINT: minio:9000
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy

  # voxforge-app:
  #   build: ./packages/frontend/apps/voxforge
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://localhost:8000
  #   depends_on:
  #     - api-gateway

volumes:
  postgres_data:
  redis_data:
  minio_data: